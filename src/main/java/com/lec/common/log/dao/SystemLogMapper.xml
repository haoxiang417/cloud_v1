<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.common.log.dao.SystemLogMapper" >
  <resultMap id="BaseResultMap" type="com.lec.common.log.vo.SystemLog" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="OPERATOR_ID" property="operatorId" jdbcType="VARCHAR" />
    <result column="IP_ADDRESS" property="ipAddress" jdbcType="VARCHAR" />
    <result column="OPERATOR_NAME" property="operatorName" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="LOG_LEVEL" property="logLevel" jdbcType="DECIMAL" />
    <result column="OPERATION_TIME" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
  </resultMap>
  
   <sql id="Base_Column_List" >
    ID, OPERATOR_ID, IP_ADDRESS, OPERATOR_NAME, TYPE, LOG_LEVEL, OPERATION_TIME,CONTENT
  </sql>
  
  <insert id="insertSelective" parameterType="com.lec.common.log.vo.SystemLog" useGeneratedKeys="true" keyProperty="id" >
    insert into SYS_LOGIN_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
    
      <if test="operatorId != null" >
        OPERATOR_ID,
      </if>
      <if test="ipAddress != null" >
        IP_ADDRESS,
      </if>
      <if test="operatorName != null" >
        OPERATOR_NAME,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="logLevel != null" >
        LOG_LEVEL,
      </if>
      <if test="operationTime != null" >
        OPERATION_TIME,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createBy != null" >
        CREATE_BY,
      </if>
      <if test="updateBy != null" >
        UPDATE_BY,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     <if test="id != null" >
        #{id},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="logLevel != null" >
        #{logLevel,jdbcType=DECIMAL},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
   <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lec.common.log.vo.SystemLogSearch" >
  select
  <if test="distinct" >
    distinct
  </if>
  <include refid="Base_Column_List" />
  from SYS_LOGIN_LOG
  <if test="_parameter != null" >
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null" >
    order by ${orderByClause}
  </if>
</select>

<select id="countByExample" parameterType="com.lec.common.log.vo.SystemLogSearch" resultType="java.lang.Integer" >
  select count(*) from SYS_LOGIN_LOG
  <if test="_parameter != null" >
    <include refid="Example_Where_Clause" />
  </if>
</select>


	<sql id="BaseWhere">
  	 <where >
  	 	 <if test="@Ognl@isNotEmpty(operatorName)" >
        and OPERATOR_NAME like '%${operatorName}%'
      </if>
      <if test="@Ognl@isNotEmpty(startDate)" >
        and OPERATION_TIME <![CDATA[>=]]> #{startDate}
      </if>
     <if test="@Ognl@isNotEmpty(endDate)" >
        and OPERATION_TIME <![CDATA[<=]]> #{endDate}
      </if>
      <if test="@Ognl@isNotEmpty(type)" >
        and TYPE = #{type}
      </if>
      <if test="@Ognl@isNotEmpty(ipAddress)" >
        and IP_ADDRESS = #{ipAddress}
      </if>
      <if test="@Ognl@isNotEmpty(logLevel)" >
        and LOG_LEVEL = #{logLevel}
      </if>
      <if test="@Ognl@isNotEmpty(content)" >
        and CONTENT like '%${content}%'
      </if>
  	 </where>
  </sql>
  <select id="selectLogs" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from SYS_LOGIN_LOG
    <include refid="BaseWhere" />
    order by OPERATION_TIME desc
  </select>
  <select id="countLogs" resultType="java.lang.Integer" >
    select count(id) from SYS_LOGIN_LOG
    <include refid="BaseWhere" />
  </select>



  
<select id="selectLastLogUser" resultMap="BaseResultMap" parameterType="java.lang.String">
	<![CDATA[
	    select * from SYS_LOGIN_LOG where operator_id=#{0} and operation_time<#{1} and type='1'
	    order by operation_time desc
   ]]>
</select>
  
</mapper>