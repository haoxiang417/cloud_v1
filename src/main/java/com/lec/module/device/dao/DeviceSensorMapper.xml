<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.module.device.dao.DeviceSensorMapper" >
  <resultMap id="BaseResultMap" type="com.lec.module.device.vo.DeviceSensor" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="DEVICE_ID" property="deviceId" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="DECIMAL_NUM" property="decimalNum" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="ICON" property="icon" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CONNECT_" property="connect" jdbcType="VARCHAR" />
    <result column="RANGE_" property="range" jdbcType="DECIMAL" />
    <result column="MEASURE_MIN" property="measureMin" jdbcType="DECIMAL" />
    <result column="MEASURE_MAX" property="measureMax" jdbcType="DECIMAL" />
    
    <result column="DEVICE_CODE" property="deviceCode" jdbcType="VARCHAR" />
    <result column="DEVICE_NAME" property="deviceName" jdbcType="VARCHAR" />
    <result column="DATA_TIME" property="dataTime" jdbcType="TIMESTAMP" />
    <result column="DATA" property="data" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    ID, DEVICE_ID, CODE, NAME, TYPE, DECIMAL_NUM, UNIT, ICON, STATUS, CONNECT_, RANGE_, 
    MEASURE_MIN, MEASURE_MAX
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lec.module.device.vo.DeviceSensorSearch" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_DEVICE_SENSOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from T_DEVICE_SENSOR
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    delete from T_DEVICE_SENSOR
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lec.module.device.vo.DeviceSensorSearch" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    delete from T_DEVICE_SENSOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lec.module.device.vo.DeviceSensor" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    insert into T_DEVICE_SENSOR (DEVICE_ID, CODE, NAME, 
      TYPE, DECIMAL_NUM, UNIT, 
      ICON, STATUS, CONNECT_, 
      RANGE_, MEASURE_MIN, MEASURE_MAX
      )
    values (#{deviceId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{decimalNum,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{connect,jdbcType=VARCHAR}, 
      #{range,jdbcType=DECIMAL}, #{measureMin,jdbcType=DECIMAL}, #{measureMax,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lec.module.device.vo.DeviceSensor" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    insert into T_DEVICE_SENSOR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        ID,
      </if>
      <if test="@Ognl@isNotEmpty(deviceId)" >
        DEVICE_ID,
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        CODE,
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        NAME,
      </if>
      <if test="@Ognl@isNotEmpty(type)" >
        TYPE,
      </if>
      <if test="@Ognl@isNotEmpty(decimalNum)" >
        DECIMAL_NUM,
      </if>
      <if test="@Ognl@isNotEmpty(unit)" >
        UNIT,
      </if>
      <if test="@Ognl@isNotEmpty(icon)" >
        ICON,
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        STATUS,
      </if>
      <if test="@Ognl@isNotEmpty(connect)" >
        CONNECT_,
      </if>
      <if test="@Ognl@isNotEmpty(range)" >
        RANGE_,
      </if>
      <if test="@Ognl@isNotEmpty(measureMin)" >
        MEASURE_MIN,
      </if>
      <if test="@Ognl@isNotEmpty(measureMax)" >
        MEASURE_MAX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="@Ognl@isNotEmpty(id)" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(deviceId)" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(type)" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(decimalNum)" >
        #{decimalNum,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(unit)" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(icon)" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(connect)" >
        #{connect,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(range)" >
        #{range,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(measureMin)" >
        #{measureMin,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(measureMax)" >
        #{measureMax,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lec.module.device.vo.DeviceSensorSearch" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    select count(*) from T_DEVICE_SENSOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    update T_DEVICE_SENSOR
    <set >
      <if test="@Ognl@isNotEmpty(record.id)" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.deviceId)" >
        DEVICE_ID = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.code)" >
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.name)" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.type)" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.decimalNum)" >
        DECIMAL_NUM = #{record.decimalNum,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.unit)" >
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.icon)" >
        ICON = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.status)" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.connect)" >
        CONNECT_ = #{record.connect,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(record.range)" >
        RANGE_ = #{record.range,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(record.measureMin)" >
        MEASURE_MIN = #{record.measureMin,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(record.measureMax)" >
        MEASURE_MAX = #{record.measureMax,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    update T_DEVICE_SENSOR
    set ID = #{record.id,jdbcType=VARCHAR},
      DEVICE_ID = #{record.deviceId,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      DECIMAL_NUM = #{record.decimalNum,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      ICON = #{record.icon,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      CONNECT_ = #{record.connect,jdbcType=VARCHAR},
      RANGE_ = #{record.range,jdbcType=DECIMAL},
      MEASURE_MIN = #{record.measureMin,jdbcType=DECIMAL},
      MEASURE_MAX = #{record.measureMax,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lec.module.device.vo.DeviceSensor" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    update T_DEVICE_SENSOR
    <set >
      <if test="@Ognl@isNotEmpty(deviceId)" >
        DEVICE_ID = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(type)" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(decimalNum)" >
        DECIMAL_NUM = #{decimalNum,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(unit)" >
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(icon)" >
        ICON = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(connect)" >
        CONNECT_ = #{connect,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(range)" >
        RANGE_ = #{range,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(measureMin)" >
        MEASURE_MIN = #{measureMin,jdbcType=DECIMAL},
      </if>
      <if test="@Ognl@isNotEmpty(measureMax)" >
        MEASURE_MAX = #{measureMax,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lec.module.device.vo.DeviceSensor" >
    <!--
      WARNING - @mbggenerated
      This element was generated on Wed Oct 24 14:03:05 CST 2018.
    -->
    update T_DEVICE_SENSOR
    set DEVICE_ID = #{deviceId,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      DECIMAL_NUM = #{decimalNum,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      ICON = #{icon,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CONNECT_ = #{connect,jdbcType=VARCHAR},
      RANGE_ = #{range,jdbcType=DECIMAL},
      MEASURE_MIN = #{measureMin,jdbcType=DECIMAL},
      MEASURE_MAX = #{measureMax,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getListByCondition" resultMap="BaseResultMap" >
    SELECT 
    T.ID, T.DEVICE_ID, T.CODE, T.NAME, T.TYPE, T.DECIMAL_NUM, T.UNIT, T.ICON, T.STATUS, T.CONNECT_, T.RANGE_, T.MEASURE_MIN, T.MEASURE_MAX
    , D.CODE AS DEVICE_CODE, D.NAME AS DEVICE_NAME, getRealData(D.CODE, T.CODE, T5.DATA) AS DATA, T5.DATA_TIME
     FROM T_DEVICE_SENSOR T
     LEFT JOIN T_DEVICE_INFO D ON D.ID = T.DEVICE_ID
     LEFT JOIN (
       SELECT T3.DEVICE_CODE, T3.SENSOR_CODE, T3.DATA_TIME, T3.DATA
       FROM T_DEVICE_SENSOR_DATA T3
       INNER JOIN (
          SELECT MAX(T2.DATA_TIME) AS DATA_TIME, T2.DEVICE_CODE, T2.SENSOR_CODE 
          FROM T_DEVICE_SENSOR_DATA T2
          GROUP BY T2.DEVICE_CODE, T2.SENSOR_CODE
       ) T4 ON T3.DATA_TIME = T4.DATA_TIME AND T3.DEVICE_CODE = T4.DEVICE_CODE AND T3.SENSOR_CODE = T4.SENSOR_CODE
     ) T5 ON T5.DEVICE_CODE = D.CODE AND T5.SENSOR_CODE = T.CODE
    <include refid="BaseWhere"/>
    <if test="@Ognl@isNotEmpty(sortColumn)" >
       order by ${sortColumn} 
    </if>
  </select>
  <sql id="BaseWhere">
  	<where >
      <if test="@Ognl@isNotEmpty(id)" >
         and T.ID = #{id,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(deviceId)" >
         and T.DEVICE_ID = #{deviceId,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(code)" >
         and T.CODE = #{code,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(name)" >
         and T.NAME = #{name,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(type)" >
         and T.TYPE = #{type,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(decimalNum)" >
         and T.DECIMAL_NUM = #{decimalNum,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(unit)" >
         and T.UNIT = #{unit,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(status)" >
         and T.STATUS = #{status,jdbcType=VARCHAR}
      </if>
      <if test="@Ognl@isNotEmpty(connect)" >
         and T.CONNECT_ = #{connect,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="countList" resultType="java.lang.Integer" >
    SELECT COUNT(T.ID) 
    FROM T_DEVICE_SENSOR T
     LEFT JOIN T_DEVICE_INFO D ON D.ID = T.DEVICE_ID
    <include refid="BaseWhere"/>
  </select>
</mapper>